import{_ as n,V as s,W as a,a0 as t}from"./framework-0aae388a.js";const p={},o=t(`<p>起因是我需要往一个请求头中塞一个时间，并且还要用时间来比较当前的时间，起初</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 2023-03-07 16:06:22.6212138 +0800 CST m=+0.002775201</span>

time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GoString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// time.Date(2023, time.March, 7, 16, 7, 30, 188558700, time.Local)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果是这样的字符串形式那我另一头接收到必须得解析一遍</p><p>但实际上直接用<code>time.Now().String()</code>或者<code>time.Now().GoString()</code>的字符串丢给<code>time.Parse()</code>都会报错，也就是说自带的<code>String</code>类方法都不能直接解析回去😥</p><p>那我想用用自带的<code>After()</code>和<code>Before()</code>的比较时间的方法就不行了😪</p><p>那为了方便就用时间戳来了<code>time.Now().Unix()</code>只需要另一头拿到时间戳的字符串，把他转成int64做比较即可</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// 拿到当前的时间戳</span>
start <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
start2 <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>

time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span>

<span class="token comment">// 拿到睡眠5秒后的时间戳</span>
end <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
end2 <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span>end<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>

<span class="token comment">// 把时间戳字符串转换为int64</span>
atoi<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">ParseInt</span><span class="token punctuation">(</span>start2<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>
atoi2<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">ParseInt</span><span class="token punctuation">(</span>end2<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>

<span class="token comment">// 结果均为 5</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;1:  &quot;</span><span class="token punctuation">,</span> end<span class="token operator">-</span>start<span class="token punctuation">)</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;2:  &quot;</span><span class="token punctuation">,</span> atoi2<span class="token operator">-</span>atoi<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),e=[o];function c(i,u){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","time.html.vue"]]);export{k as default};
