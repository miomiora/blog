import{_ as o,V as t,W as n,X as e,$ as a,Y as d,a0 as r,C as c}from"./framework-2d083801.js";const p={},h=e("h2",{id:"项目简介",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#项目简介","aria-hidden":"true"},"#"),a(" 项目简介")],-1),s=e("p",null,"mio-api开放平台，使用Go作为主要后端，Spring Cloud Gateway作为网关进行鉴权、转发、染色，gRPC作为网关调用Go后端方法的方式",-1),m={href:"https://github.com/miomiora/mio-api",target:"_blank",rel:"noopener noreferrer"},l=r('<p><strong><em><code>TODO</code></em></strong>: 完成该项目时对项目结构的分层还有比较大的问题，从此项目之后都会采用 <code>CLD</code> 分层来写项目</p><h2 id="运行效果" tabindex="-1"><a class="header-anchor" href="#运行效果" aria-hidden="true">#</a> 运行效果</h2><figure><img src="https://s2.loli.net/2023/03/14/3dFKHOBPuEJNLqM.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://s2.loli.net/2023/03/14/UO94MkwVecElp5x.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>项目启动需要启动：mio-api-frontend、mio-api、mio-api-gateway、mio-api-interface</p><h2 id="功能简介" tabindex="-1"><a class="header-anchor" href="#功能简介" aria-hidden="true">#</a> 功能简介</h2><p>技术栈：Gin、Gorm、Redis、MySQL、gRPC、Vue3、Vite</p><h3 id="mio-api" tabindex="-1"><a class="header-anchor" href="#mio-api" aria-hidden="true">#</a> mio-api</h3><p>用户模块：登录、注册、登出、修改信息、密码</p><p>管理员模块：用户管理、接口管理</p><p>Redis+Token单点登录</p><p>gRPC 提供方</p><h3 id="mio-api-frontend" tabindex="-1"><a class="header-anchor" href="#mio-api-frontend" aria-hidden="true">#</a> mio-api-frontend</h3><p>主要给<code>mio-api</code>后端提供前端可视化界面</p><h3 id="mio-api-client" tabindex="-1"><a class="header-anchor" href="#mio-api-client" aria-hidden="true">#</a> mio-api-client</h3><p>为调用接口的<code>sdk</code>方便开发者快速调用相关的<code>api</code></p><h3 id="mio-api-gateway" tabindex="-1"><a class="header-anchor" href="#mio-api-gateway" aria-hidden="true">#</a> mio-api-gateway</h3><p>对调用<code>api</code>接口进行鉴权，鉴权需要通过<code>gRPC</code>向<code>mio-api</code>验证请求携带的<code>accessKey</code>是否有效，并且验证<code>secretKey</code>与携带的<code>sign</code>是否匹配，如果鉴权成功则给请求添加相应请求头，并转发路由到真实的接口地址</p><h3 id="mio-api-interface" tabindex="-1"><a class="header-anchor" href="#mio-api-interface" aria-hidden="true">#</a> mio-api-interface</h3><p><code>api</code>接口实际处理的模块，将接收从网关转发过来的请求进行响应，并且验证请求头是否包含网关添加的请求头，防止绕过网关直接访问真实地址的行为</p><div class="hint-container tip"><p class="hint-container-title">备注</p><p>2023年11月28日</p><p>我想把这个东西重写一遍</p></div>',21);function f(g,u){const i=c("ExternalLinkIcon");return t(),n("div",null,[h,s,e("p",null,[a("地址："),e("a",m,[a("https://github.com/miomiora/mio-api"),d(i)])]),l])}const x=o(p,[["render",f],["__file","mio-api.html.vue"]]);export{x as default};
